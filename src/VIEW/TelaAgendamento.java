/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package VIEW;

import DAL.ModuloConexao;
import java.io.Console;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;


public class TelaAgendamento extends javax.swing.JInternalFrame {

    Connection conexao = null;      // abre conexao
    PreparedStatement pst = null;   //Executa Sql
    ResultSet rs = null;

    public TelaAgendamento() {
        initComponents();
        conexao = ModuloConexao.conector();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCliCad = new javax.swing.JButton();
        btnCliPes = new javax.swing.JButton();
        btnCliEdi = new javax.swing.JButton();
        btnCliEx = new javax.swing.JButton();
        btnCliImp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMatriculaSocio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAgendamento = new javax.swing.JTable();
        txtCodigoReserva = new javax.swing.JTextField();
        modalidadeAgendamento = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        InstalacaoAgendamento = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        dataAgendamento = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        horaAgendamento = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setTitle("Tela de Agendamento");
        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(619, 490));

        btnCliCad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/add.png"))); // NOI18N
        btnCliCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliCadActionPerformed(evt);
            }
        });

        btnCliPes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/userPesquisar.png"))); // NOI18N
        btnCliPes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliPesActionPerformed(evt);
            }
        });

        btnCliEdi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/editar.png"))); // NOI18N
        btnCliEdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliEdiActionPerformed(evt);
            }
        });

        btnCliEx.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/remover.png"))); // NOI18N
        btnCliEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliExActionPerformed(evt);
            }
        });

        btnCliImp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/userImpressora_1.png"))); // NOI18N

        jLabel1.setText("Codigo Reserva");

        jLabel3.setText("Matricula Socio");

        jLabel7.setText("Modalidade");

        txtMatriculaSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaSocioActionPerformed(evt);
            }
        });
        txtMatriculaSocio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMatriculaSocioKeyReleased(evt);
            }
        });

        tblAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAgendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAgendamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAgendamento);

        txtCodigoReserva.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtCodigoReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoReservaActionPerformed(evt);
            }
        });

        modalidadeAgendamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aluguel", "Matricula" }));
        modalidadeAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modalidadeAgendamentoActionPerformed(evt);
            }
        });

        jLabel14.setText("Instalação");

        InstalacaoAgendamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quadra de Tenis", "Piscina", "Campo Futebol", "Pavilhão" }));
        InstalacaoAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InstalacaoAgendamentoActionPerformed(evt);
            }
        });

        jLabel2.setText("Data");

        try {
            dataAgendamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel4.setText("Hora");

        horaAgendamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00" }));
        horaAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaAgendamentoActionPerformed(evt);
            }
        });

        jLabel5.setText("Boleto Pagamento");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(modalidadeAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(InstalacaoAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodigoReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMatriculaSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(horaAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCliCad, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCliPes, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCliEdi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCliEx, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCliImp, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigoReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMatriculaSocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(dataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(horaAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(modalidadeAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(InstalacaoAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCliPes, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCliCad, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCliEdi, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCliEx, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCliImp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCliPesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliPesActionPerformed
        // TODO add your handling code here:
        consultar();
    }//GEN-LAST:event_btnCliPesActionPerformed

    private void txtMatriculaSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaSocioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatriculaSocioActionPerformed

    private void InstalacaoAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InstalacaoAgendamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InstalacaoAgendamentoActionPerformed

    private void btnCliCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliCadActionPerformed
        // TODO add your handling code here:
        cadastrar();
    }//GEN-LAST:event_btnCliCadActionPerformed

    private void txtMatriculaSocioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaSocioKeyReleased
        pesquisar_agendamentos();
        
    }//GEN-LAST:event_txtMatriculaSocioKeyReleased

    private void tblAgendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAgendamentoMouseClicked
        // TODO add your handling code here:
        buscar_dados_agendamento();
       
    }//GEN-LAST:event_tblAgendamentoMouseClicked

    private void btnCliExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliExActionPerformed
        // TODO add your handling code here:
        remover();
    }//GEN-LAST:event_btnCliExActionPerformed

    private void btnCliEdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliEdiActionPerformed
        // TODO add your handling code here:
        atualizar();
    }//GEN-LAST:event_btnCliEdiActionPerformed

    private void modalidadeAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modalidadeAgendamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modalidadeAgendamentoActionPerformed

    private void horaAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaAgendamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaAgendamentoActionPerformed

    private void txtCodigoReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoReservaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoReservaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> InstalacaoAgendamento;
    private javax.swing.JButton btnCliCad;
    private javax.swing.JButton btnCliEdi;
    private javax.swing.JButton btnCliEx;
    private javax.swing.JButton btnCliImp;
    private javax.swing.JButton btnCliPes;
    private javax.swing.JFormattedTextField dataAgendamento;
    private javax.swing.JComboBox<String> horaAgendamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> modalidadeAgendamento;
    private javax.swing.JTable tblAgendamento;
    private javax.swing.JTextField txtCodigoReserva;
    private javax.swing.JTextField txtMatriculaSocio;
    // End of variables declaration//GEN-END:variables

     private void cadastrar() {

        String sql = "INSERT INTO agendamento (codigo_socio, modalidade, instalacao, "
                + "data, hora, ispago) VALUES "
                + "(?, ?, ?, ?, ?, ?)";

        try {
            if(pesquisar_disponibilidade() > 0){
                JOptionPane.showMessageDialog(null, "Agendamento nao Cadastrado por indisponibilidade de horário");
                return;
            }
            pst.clearParameters();
            
            
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtMatriculaSocio.getText());
            pst.setString(2, modalidadeAgendamento.getSelectedItem().toString());
            pst.setString(3, InstalacaoAgendamento.getSelectedItem().toString());            
            pst.setString(4, dataAgendamento.getText());
            pst.setString(5, horaAgendamento.getSelectedItem().toString());
            pst.setInt(6, 0);
            
            System.out.println(pst);
            
            
            int resultado = pst.executeUpdate();
            


            if (resultado == 1) {
                JOptionPane.showMessageDialog(null, "Pré-Agendamento Cadastrado");
                //txtCodigoReserva.setText(null);
                txtMatriculaSocio.setText(null);                
                InstalacaoAgendamento.setSelectedItem(null);
                dataAgendamento.setText(null);
                horaAgendamento.setSelectedItem(null); 
                modalidadeAgendamento.setSelectedItem(null);                 
                InstalacaoAgendamento.setSelectedItem(null); 

            } else {
                JOptionPane.showMessageDialog(null, "Pré-Agendamento nao Cadastrado");
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void pesquisar_agendamentos() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        String sql = " SELECT codigo, codigo_socio, modalidade, instalacao, "
                + "data, hora FROM agendamento ";
   
        try {
             pst = conexao.prepareStatement(sql);
             //pst.setString(1, txtCodigoReserva.getText() + "%" );
             rs = pst.executeQuery();
             
             tblAgendamento.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            
        }   
    }
    
        private int pesquisar_disponibilidade() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        String sql = " SELECT count(1) as resultado FROM agendamento where data like ? and hora like ? and instalacao like ? ";
   
        try {
            pst = conexao.prepareStatement(sql); pst.setString(3, InstalacaoAgendamento.getSelectedItem().toString());            
            pst.setString(1, dataAgendamento.getText());
            pst.setString(2, horaAgendamento.getSelectedItem().toString());
            
            System.out.println(" Pesquisar disponibilidade: " + pst);
            
            rs = pst.executeQuery();
            int resultado=0;
            
            if (rs.next()){
                resultado = rs.getInt("resultado");
            }
            
            System.out.println("Resultado: " + resultado);
            
            return resultado;
            
        } catch (Exception e) {
            return 0;
        }   
    }

    private void buscar_dados_agendamento() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        int buscar = tblAgendamento.getSelectedRow();
        txtCodigoReserva.setText(tblAgendamento.getModel().getValueAt(buscar,0).toString());
        txtMatriculaSocio.setText(tblAgendamento.getModel().getValueAt(buscar,1).toString());
        modalidadeAgendamento.setSelectedItem(tblAgendamento.getModel().getValueAt(buscar,2).toString());
        InstalacaoAgendamento.setSelectedItem(tblAgendamento.getModel().getValueAt(buscar,3).toString());
        dataAgendamento.setText(tblAgendamento.getModel().getValueAt(buscar,4).toString());
        horaAgendamento.setSelectedItem(tblAgendamento.getModel().getValueAt(buscar,5).toString());       
    
    }

    private void consultar() {
       // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
       String sql ="SELECT * FROM agendamento WHERE modalidade like ? and instalacao like ? and hora like ?";
       
        try {
             pst = conexao.prepareStatement(sql);
             pst.setString(1, modalidadeAgendamento.getSelectedItem().toString());
             pst.setString(2, InstalacaoAgendamento.getSelectedItem().toString());             
             pst.setString(3, horaAgendamento.getSelectedItem().toString());
             rs = pst.executeQuery();
            
             if (rs.next()){
             txtMatriculaSocio.setText(rs.getString("codigo_socio"));
             modalidadeAgendamento.setSelectedItem(rs.getString("modalidade"));
             InstalacaoAgendamento.setSelectedItem(rs.getString("instalacao"));
             dataAgendamento.setText(rs.getString("data"));
             horaAgendamento.setSelectedItem(rs.getString("hora"));
             }else {
             JOptionPane.showMessageDialog(null, "Agendamento nao Localizado");
              txtMatriculaSocio.setText(null);
              txtCodigoReserva.setText(null);
             
             }
                         
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }    
    }

    private void remover() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        String sql ="DELETE FROM agendamento WHERE COD=?";
       
        try {
             pst = conexao.prepareStatement(sql);
             pst.setString(1, txtCodigoReserva.getText());
             rs = pst.executeQuery();
             
             int apagado = pst.executeUpdate();
            
             if (apagado >0 ){
                JOptionPane.showMessageDialog(null, "Agendamento Excluido");
                txtCodigoReserva.setText(rs.getString("codigo"));
            }
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }    
    
    }

    private void atualizar() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        String sql = "UPDATE agendamento SET  modalidade = ?, instalacao = ?, "
                + " data = ?, hora = ? WHERE COD=?";

        try {
            pst = conexao.prepareStatement(sql);
            
            pst.setString(1, modalidadeAgendamento.getSelectedItem().toString());
            pst.setString(2, InstalacaoAgendamento.getSelectedItem().toString());            
            pst.setString(3, dataAgendamento.getText());
            pst.setString(4, horaAgendamento.getSelectedItem().toString());
            pst.setString(5, txtCodigoReserva.getText());
                    
            System.out.println("pst");

            int atualizado = pst.executeUpdate();

            if (atualizado == 1) {
                JOptionPane.showMessageDialog(null, "Agendamento Atualizado");
                txtMatriculaSocio.setText(null);
                txtCodigoReserva.setText(null);             
                InstalacaoAgendamento.setSelectedItem(null);
                dataAgendamento.setText(null);
                horaAgendamento.setSelectedItem(null); 
                modalidadeAgendamento.setSelectedItem(null);  
                InstalacaoAgendamento.setSelectedItem(null);

            } else {
                JOptionPane.showMessageDialog(null, "Agendamento nao Atualizado");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }
        
    }

        /*
    private static class PreparedStatement {

        public PreparedStatement() {
        }

        private void setString(int i, String text) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        private int executeUpadate() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }

    private static class ResultSet {

        public ResultSet() {
        }
    }
}
*/
